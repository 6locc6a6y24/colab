{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1bbYGdWi_dKiB0HoLFBXxshe_0yemJtea","timestamp":1729594128590}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["\n","\n","---\n","\n"],"metadata":{"id":"tKNG_RzWxG6g"}},{"cell_type":"markdown","source":["# **Дисклеймер**\n","\n","В данной практике будет введен дополнительный критерий: чистота и читаемость кода, а также соблюдение правил описанных в начале практики"],"metadata":{"id":"cFcrKfclKWh0"}},{"cell_type":"markdown","source":["\n","\n","---\n","\n"],"metadata":{"id":"0SnE87X1xDlV"}},{"cell_type":"markdown","source":["# Задание 1\n","\n","**Задача:**\n","\n","Напишите функцию очищающий список от дубликтов\n","\n","\n","*Запрещено:*\n","\n","*   Использовать set() или готовые функции очищающие список от дубликатов\n","\n","Вввод:\n","\n","```\n","apple banana apple 1 3 4 4 5\n","```\n","\n","\n","Вывод:\n","\n","```\n","apple banana 1 3 4 5\n","```\n","\n"],"metadata":{"id":"VxawR9NubT_F"}},{"cell_type":"code","source":["def sort(msg):\n","    sorted_list = []\n","    for i in message:\n","        if i not in sorted_list:\n","            sorted_list.append(i)\n","    return sorted_list\n","\n","\n","message = input(\"Введите сообщение - \").split()\n","print(sort(message))"],"metadata":{"id":"ml5gnbPXbeju"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Задание 2\n","\n","**Задача:**\n","\n","Написать функцию для нахождения простых чисел в диапазоне\n","\n","Ввод:\n","\n","```\n","10, 50\n","```\n","\n","Вывод:\n","\n","```\n","11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47\n","```"],"metadata":{"id":"y05x0eD0cVCC"}},{"cell_type":"code","source":["def find_simple_numbers(min_num, max_num):\n","\n","    simple_nums = []\n","    k = 0\n","\n","    for i in range(min_num, max_num):\n","        for j in range(2, i):\n","\n","            if i%j == 0:\n","                k+=1\n","\n","        if k == 0:\n","            if i not in simple_nums:\n","                simple_nums.append(i)\n","\n","        else:\n","            k = 0\n","\n","    return simple_nums\n","\n","\n","min_num = int(input(\"Введите первое число - \"))\n","max_num = int(input(\"Введите второе число - \"))\n","\n","print(find_simple_numbers(min_num, max_num))"],"metadata":{"id":"XSMJnLgrc6Bf"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Задание 3\n","\n","Напишите функцию для объединения двух списков (список ключей и список значении) в словарь\n","\n","*Запрещено:*\n","\n","*   Использования готовых функции для объединения списков (пример: zip() )\n","\n","Дано:\n","\n","```\n","keys = ['a', 'b', 'c', 'e' ]\n","values = [1, 2, 3, 4]\n","```\n","\n","Вывод:\n","```\n","{'a': 1, 'b': 2, 'c': 3, 'e': 4}\n","```\n","\n","\n"],"metadata":{"id":"vYM0LyxxdElN"}},{"cell_type":"code","source":["def list_to_dict(keys, values):\n","\n","    result = {}\n","\n","    for i in range(len(keys)):\n","\n","        result[keys[i]] = values[i]\n","\n","    return result\n","\n","\n","keys = ['a', 'b', 'c', 'e' ]\n","values = [1, 2, 3, 4]\n","\n","print(list_to_dict(keys, values))"],"metadata":{"id":"CRvhHTjCdvjS"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Задание 4\n","\n","Напишите функцию(ии) для подсчета статистических параметров:\n","*   Сумму\n","*   Среднее арифметическое\n","*   Медиану\n","*   Моду\n","\n","\n","*Запрещено:*\n","\n","*   sum()\n","*   sorted()\n","*   и других функции предоставляющих готовое решение задания\n","\n","Дано:\n","\n","```\n","numbers = [1, 2, 2, 3, 4, 5, 6, 7, 8 ,9 ,10]\n","\n","```\n","\n","Вывод:\n","```\n","{'mean': 5.181818181818182, 'median': 5, 'mode': 2, 'sum': 57}\n","```\n"],"metadata":{"id":"L_w8H8i-fQcP"}},{"cell_type":"code","source":["def summ(nums):\n","    total = 0\n","\n","    for i in nums:\n","        total += i\n","\n","    return total\n","\n","\n","def avg(nums):\n","\n","    total = 0\n","\n","    for i in nums:\n","        total += i\n","\n","    return total/(len(nums))\n","\n","\n","def median(nums):\n","\n","    for i in range(len(nums)):\n","\n","        for j in range(0, len(nums)-i-1):\n","\n","            if nums[j]>nums[j+1]:\n","                nums[j], nums[j+1] = nums[j+1], nums[j]\n","\n","    return nums[(len(nums)//2)]\n","\n","\n","def mode(nums):\n","    dict1 = dict.fromkeys(nums, 0)\n","\n","    for i in nums:\n","        dict1[i]+=1\n","\n","    return max(dict1.values())\n","\n","\n","def calculator(result, nums):\n","    result[\"sum\"] = summ(nums)\n","    result[\"average\"] = avg(nums)\n","    result[\"median\"] = median(nums)\n","    result[\"mode\"] = mode(nums)\n","    return result\n","\n","\n","result_dict = {}\n","numbers = [1, 2, 2, 3, 4, 5, 6, 7, 8 ,9 ,10]\n","print(calculator(result_dict, numbers))"],"metadata":{"id":"dW6jW_rjfuba"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Задание 5\n","\n","На ввод поступает строка символов. Строка состоит из слов, которые отделены друг от друга пробелами. Необходимо вывести самое длинное слово и его порядковый номер.\n","\n","*Запрещено:*\n","\n","*   len()\n","\n","Дано:\n","\n","```\n","Страдание и боль всегда обязательны для широкого сознания и глубокого сердца.\n","\n","```\n","\n","Вывод:\n","```\n","Самое длинное слово с номером 5: обязательны\n","```"],"metadata":{"id":"hZW0NZ7SgTcp"}},{"cell_type":"code","source":["def max_lenght_word(sentence):\n","    list1 = sentence.split()\n","\n","    result = 0\n","    word = \"\"\n","\n","    for i in list1:\n","        counter = 0\n","\n","        for j in i:\n","            counter +=1\n","\n","        if counter > result:\n","            result = counter\n","            word = i\n","\n","    return word\n","\n","sentence = \"Страдание и боль всегда обязательны для широкого сознания и глубокого сердца\"\n","print(\"Самоедлинное слово - \", max_lenght_word(sentence))"],"metadata":{"id":"rC5DpHHLsDYp"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Задание 6\n","\n","Напишите программу, для управления оценками студентов, со следующими функциями:\n","\n","* Добавление информации о студенте и его оценках.\n","* Подсчет среднего балла студента.\n","* Получение списка всех студентов с их средними баллами.\n","* Поиск студента по имени и вывод его оценок и среднего балла.\n","\n","\n","\n"],"metadata":{"id":"k5BzJW5ZeaQN"}},{"cell_type":"code","source":["def new_student(name, math, lang, prog, students):\n","\n","    avg = (math+lang+prog)/3\n","    students.append({\"Фамилия\":name, \"Математика\":math,\n","                               \"Русский язык\":lang, \"Программирование\":prog,\n","                               \"Average\":avg})\n","    return students\n","\n","def average(name, students):\n","\n","    for i in students:\n","        for k,v in i.items():\n","            if v == name:\n","                return i[\"Average\"]\n","\n","def all_students(students):\n","\n","    for i in students:\n","        print(i)\n","\n","def find_student(name, student):\n","    for i in students:\n","        for v in i.values():\n","            if v == name:\n","                return i\n","global students\n","\n","students = []\n","menu = 1\n","\n","while menu != 0:\n","\n","    menu = int(input(\"1.Добавить информацию о студенте, 2.Средний балл студента,\"\n","                     \" 3.Все студенты, 4.Информация о студенте: \"))\n","\n","    if menu == 1:\n","\n","        name = str(input(\"Введите фамилию студента - \"))\n","        math = int(input(\"Введите оценку по математике - \"))\n","        lang = int(input(\"Введите оценку по русскому языку - \"))\n","        prog = int(input(\"Введите оценку по программированию - \"))\n","        new_student(name, math, lang, prog, students)\n","\n","    elif menu == 2:\n","\n","        name = str(input(\"Введите фамилию студента - \"))\n","        print(\"Средний балл этого студента - \", average(name, students))\n","\n","    elif menu == 3:\n","\n","        all_students(students)\n","\n","    elif menu == 4:\n","\n","        name = str(input(\"Введите фамилию студента - \"))\n","        print(find_student(name, students))"],"metadata":{"id":"cvhlltVbdyoL"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Задание 7\n","\n","\n","**Задача:**\n","\n","Создайте приложение-викторину с командной строкой, которое задает пользователям вопросы по различным темам и отслеживает их результаты.\n","\n","Ключевые особенности:\n","\n","*   Хранение данных о вопросах и ответах на них, а также баллов за каждый вопрос\n","*   Реализуйте функцию для представления вопросов, принятия ответов пользователей и предоставления обратной связи о том, являются ли ответы правильными или неправильными.\n","*  После завершения викторины отобразите общий балл пользователя из числа ответов на вопросы.\n","*  Реализуйте функцию добавления нового вопроса\n","*  Реализуйте функцию перемешивания вопросов, для отображения случайного вопроса\n"],"metadata":{"id":"iQ8Z-7PYgu1_"}},{"cell_type":"code","source":["def play(player, questions, players):\n","\n","\n","    counter = 0\n","\n","    for k,v in questions.items():\n","\n","        print(k)\n","        answer = str(input(\"Ответ: \"))\n","\n","        if answer == v:\n","            print(\"Верно\")\n","            counter += 1\n","\n","    players.append({\"Игрок\":player, \"Очки\":counter})\n","    print(players)\n","\n","\n","\n","\n","\n","questions = {\"Кого из птиц называют санитаром леса?\":\"дятла\",\n","             \"Сколько лапок у паука?\":\"восемь\",\n","             \"Сколько классов в начальной школе?\":\"четыре\",\n","             \"Сколько цветов в флаге России?\":\"три\"}\n","players = []\n","menu = 1\n","\n","while menu != 0:\n","\n","    menu = int(input(\"1.Сыграть в викторину, 2.Добавить новый вопрос\"\n","                \"3.Случайный вопрос, 4.Отобразить историю - \"))\n","    if menu == 1:\n","        player = str(input(\"Введите имя игрока - \"))\n","        play(player, questions, players)"],"metadata":{"id":"DhxyYwHwh2V4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"QE7dYoyFYbhl"},"execution_count":null,"outputs":[]}]}