{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1zZbU5QXY3ZEtfsKWHQC-JGRhxn7rwGmd","timestamp":1731408244338}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["ФИО"],"metadata":{"id":"8hJfL9b2l439"}},{"cell_type":"code","source":["Соболев А.О."],"metadata":{"id":"wRnqvYOkl6EX","colab":{"base_uri":"https://localhost:8080/","height":110},"executionInfo":{"status":"error","timestamp":1731408399715,"user_tz":-240,"elapsed":320,"user":{"displayName":"Александр Соболевский","userId":"05585722129785396224"}},"outputId":"6f2c7cfb-bc0c-4dcb-db3a-9802c64cf93f"},"execution_count":null,"outputs":[{"output_type":"error","ename":"SyntaxError","evalue":"invalid syntax (<ipython-input-1-b0a6c8ac1c6f>, line 1)","traceback":["\u001b[0;36m  File \u001b[0;32m\"<ipython-input-1-b0a6c8ac1c6f>\"\u001b[0;36m, line \u001b[0;32m1\u001b[0m\n\u001b[0;31m    Соболев А.О.\u001b[0m\n\u001b[0m            ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"]}]},{"cell_type":"markdown","source":["# Дисклеймер"],"metadata":{"id":"weOtPwPQmgpD"}},{"cell_type":"markdown","source":["В данной практике вам необходимо применить все ваши знания по темам:\n","\n","- Функции\n","- Словари\n","- Списки\n","- Множества\n","- Условные конструкции\n","- Запросы\n","\n","и все что было изучено на прошлых практических занятиях\n","\n","В каждом задании кратко описаны функции, которые необходимо реализовать, детали реализации вы должны продумать самостоятельно"],"metadata":{"id":"LznB3uscmjDa"}},{"cell_type":"markdown","source":["# Задание 0"],"metadata":{"id":"7nSJIqkTvC_C"}},{"cell_type":"markdown","source":["Создайте функцию по нахождению уникальных элементов из двух списков\n","\n","\n","\n","```\n","a = [1, 2, 3, 4]\n","b = [3, 4, 5, 6]\n","```\n","\n"],"metadata":{"id":"exACjTiVvGUe"}},{"cell_type":"markdown","source":["# Задание 1"],"metadata":{"id":"SVWNlBALpCNo"}},{"cell_type":"code","source":["def find_unique(a, b):\n","    a = set(a)\n","    b = set(b)\n","    return a ^ b\n","\n","\n","a = [1, 2, 3, 4]\n","b = [3, 4, 5, 6]\n","print(find_unique(a, b))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"j8cYAmI2CeJA","executionInfo":{"status":"ok","timestamp":1731426744746,"user_tz":-300,"elapsed":331,"user":{"displayName":"Александр Соболевский","userId":"05585722129785396224"}},"outputId":"e1d967e9-6595-4ac5-9ddd-661e4877f06b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{1, 2, 5, 6}\n"]}]},{"cell_type":"markdown","source":["Симулятор виртуального питомца\n","\n","Цель: создать виртуальный симулятор домашних животных, в котором пользователи смогут заводить питомцев и ухаживать за ними.\n","\n","Требования:\n","\n","- Функция для усыновления питомца (имя, тип, возраст).\n","- Функция для того, чтобы покормить питомца, поиграть с ним или уложить его спать.\n","- Функция для отображения состояния питомца (голод, радость, энергия)."],"metadata":{"id":"RcKA-VEqpC7f"}},{"cell_type":"code","source":["def feed(pet):\n","    try:\n","        food = str(input('Чем будете кормить? - '))\n","        pet['характеристики']['сытость'] += 25\n","        pet['характеристики']['сон'] -= 25\n","        pet['характеристики']['счастливость'] -= 25\n","        if pet['характеристики']['сытость'] >= 100:\n","            pet['характеристики']['сытость'] = 100\n","            print('питомец сыт')\n","        if pet['характеристики']['сон'] < 0:\n","            pet['характеристики']['сон'] = 0\n","            print('дайте питомцу поспать')\n","        if pet['характеристики']['счастливость'] < 0:\n","            pet['характеристики']['счастливость'] = 0\n","            print('поиграйте с питомцем')\n","        print(pet)\n","        return pet\n","    except:\n","        print('неверный ввод')\n","\n","\n","def play(pet):\n","    game = int(input('1.Поиграть с лазером, 2.Почесать пузо, 3.Погулять - '))\n","    if game == 1:\n","        pet['характеристики']['счастливость'] += 10\n","        pet['характеристики']['сытость'] -= 25\n","        pet['характеристики']['сон'] -=25\n","        if pet['характеристики']['счастливость'] > 100:\n","            pet['характеристики']['счастливость'] = 100\n","        if pet['характеристики']['сытость'] < 0:\n","            pet['характеристики']['сытость'] = 0\n","            print('питомец хочет кушать')\n","        if pet['характеристики']['сон'] <= 0:\n","            pet['характеристики']['сон'] = 0\n","            print('питомец хочет спать')\n","        print('питомец доволен')\n","        print(pet)\n","        return pet\n","    elif game == 2:\n","        pet['характеристики']['счастливость'] += 20\n","        pet['характеристики']['сытость'] -= 25\n","        pet['характеристики']['сон'] -=25\n","        if pet['характеристики']['счастливость'] >= 100:\n","            pet['характеристики']['счастливость'] = 100\n","        if pet['характеристики']['сытость'] < 0:\n","            pet['характеристики']['сытость'] = 0\n","            print('питомец хочет кушать')\n","        if pet['характеристики']['сон'] <= 0:\n","            pet['характеристики']['сон'] = 0\n","            print('питомец хочет спать')\n","        print('питомец доволен')\n","        print(pet)\n","        return pet\n","    elif game == 3:\n","        pet['характеристики']['счастливость'] += 40\n","        pet['характеристики']['сытость'] -= 25\n","        pet['характеристики']['сон'] -=25\n","        if pet['характеристики']['счастливость'] >= 100:\n","            pet['характеристики']['счастливость'] = 100\n","        if pet['характеристики']['сытость'] < 0:\n","            pet['характеристики']['сытость'] = 0\n","            print('питомец хочет кушать')\n","        if pet['характеристики']['сон'] <= 0:\n","            pet['характеристики']['сон'] = 0\n","            print('питомец хочет спать')\n","        print('питомец доволен')\n","        print(pet)\n","        return pet\n","\n","\n","def sleep(pet):\n","    pet['характеристики']['сон'] += 70\n","    pet['характеристики']['сытость'] -= 50\n","    pet['характеристики']['счастливость'] -= 10\n","    if pet['характеристики']['сон'] >= 100:\n","        pet['характеристики']['сон'] = 100\n","        print('питомец выспался')\n","    if pet['характеристики']['сытость'] <= 0:\n","        pet['характеристики']['сытость'] = 0\n","        print('питомец голоден')\n","    if pet['характеристики']['счастливость'] <= 0:\n","        pet['характеристики']['счастливость'] = 0\n","        print('поиграйте с питомцем')\n","    print('питомец выспался')\n","    print(pet)\n","    return pet\n","\n","\n","def new_pet():\n","    pets = {'собака':{'имя':'','тип':'киберсобака','возраст':'0.5 года'},\n","            'кошка':{'имя':'', 'тип':'сиамская кошка', 'возраст':'2 года'},\n","            'хомяк':{'имя':'', 'тип':'дворовый хомяк', 'возраст':'0.1 года'}\n","            }\n","    print('Доступные животные')\n","    for k, v in pets.items():\n","        print(k, v)\n","    new = str(input('Выберите питомца - '))\n","    my_pet = pets[new]\n","    name = str(input('Введите имя для питомца - '))\n","    my_pet['имя'] = name\n","    my_pet['характеристики'] = {'сытость':100, 'счастливость':100, 'сон':100}\n","    print(my_pet)\n","    con = True\n","    while con:\n","      action = int(input('Выберите действие (1.покормить, 2.поиграть, '\n","                         '3.уложить спать - '))\n","      if action == 1:\n","          my_pet = feed(my_pet)\n","      elif action == 2:\n","          my_pet = play(my_pet)\n","      elif action == 3:\n","          my_pet = sleep(my_pet)\n","\n","new_pet()"],"metadata":{"id":"hE7mF-HXpJLO","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"error","timestamp":1731412137093,"user_tz":-240,"elapsed":415546,"user":{"displayName":"Александр Соболевский","userId":"05585722129785396224"}},"outputId":"e85f42e4-b2aa-47eb-f650-44d147a193e9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Доступные животные\n","собака {'имя': '', 'тип': 'киберсобака', 'возраст': '0.5 года'}\n","кошка {'имя': '', 'тип': 'сиамская кошка', 'возраст': '2 года'}\n","хомяк {'имя': '', 'тип': 'дворовый хомяк', 'возраст': '0.1 года'}\n","Выберите питомца - собака\n","Введите имя для питомца - барбос\n","{'имя': 'барбос', 'тип': 'киберсобака', 'возраст': '0.5 года', 'характеристики': {'сытость': 100, 'счастливость': 100, 'сон': 100}}\n","Выберите действие (1.покормить, 2.поиграть, 3.уложить спать2\n","1.Поиграть с лазером, 2.Почесать пузо, 3.Погулять3\n","питомец доволен\n","{'имя': 'барбос', 'тип': 'киберсобака', 'возраст': '0.5 года', 'характеристики': {'сытость': 75, 'счастливость': 100, 'сон': 75}}\n","Выберите действие (1.покормить, 2.поиграть, 3.уложить спать2\n","1.Поиграть с лазером, 2.Почесать пузо, 3.Погулять3\n","питомец доволен\n","{'имя': 'барбос', 'тип': 'киберсобака', 'возраст': '0.5 года', 'характеристики': {'сытость': 50, 'счастливость': 100, 'сон': 50}}\n","Выберите действие (1.покормить, 2.поиграть, 3.уложить спать2\n","1.Поиграть с лазером, 2.Почесать пузо, 3.Погулять3\n","питомец доволен\n","{'имя': 'барбос', 'тип': 'киберсобака', 'возраст': '0.5 года', 'характеристики': {'сытость': 25, 'счастливость': 100, 'сон': 25}}\n","Выберите действие (1.покормить, 2.поиграть, 3.уложить спать2\n","1.Поиграть с лазером, 2.Почесать пузо, 3.Погулять3\n","питомец хочет спать\n","питомец доволен\n","{'имя': 'барбос', 'тип': 'киберсобака', 'возраст': '0.5 года', 'характеристики': {'сытость': 0, 'счастливость': 100, 'сон': 0}}\n","Выберите действие (1.покормить, 2.поиграть, 3.уложить спать3\n","питомец голоден\n","питомец выспался\n","{'имя': 'барбос', 'тип': 'киберсобака', 'возраст': '0.5 года', 'характеристики': {'сытость': 0, 'счастливость': 90, 'сон': 70}}\n","Выберите действие (1.покормить, 2.поиграть, 3.уложить спать1\n","Чем будете кормить? цйу\n","{'имя': 'барбос', 'тип': 'киберсобака', 'возраст': '0.5 года', 'характеристики': {'сытость': 25, 'счастливость': 65, 'сон': 45}}\n","Выберите действие (1.покормить, 2.поиграть, 3.уложить спать1\n","Чем будете кормить? йцу\n","{'имя': 'барбос', 'тип': 'киберсобака', 'возраст': '0.5 года', 'характеристики': {'сытость': 50, 'счастливость': 40, 'сон': 20}}\n","Выберите действие (1.покормить, 2.поиграть, 3.уложить спать1\n","Чем будете кормить? йц\n","дайте питомцу поспать\n","{'имя': 'барбос', 'тип': 'киберсобака', 'возраст': '0.5 года', 'характеристики': {'сытость': 75, 'счастливость': 15, 'сон': 0}}\n","Выберите действие (1.покормить, 2.поиграть, 3.уложить спать3\n","питомец выспался\n","{'имя': 'барбос', 'тип': 'киберсобака', 'возраст': '0.5 года', 'характеристики': {'сытость': 25, 'счастливость': 5, 'сон': 70}}\n","Выберите действие (1.покормить, 2.поиграть, 3.уложить спать2\n","1.Поиграть с лазером, 2.Почесать пузо, 3.Погулять3\n","питомец доволен\n","{'имя': 'барбос', 'тип': 'киберсобака', 'возраст': '0.5 года', 'характеристики': {'сытость': 0, 'счастливость': 45, 'сон': 45}}\n"]},{"output_type":"error","ename":"KeyboardInterrupt","evalue":"Interrupted by user","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-21-dba662c6bf3d>\u001b[0m in \u001b[0;36m<cell line: 115>\u001b[0;34m()\u001b[0m\n\u001b[1;32m    113\u001b[0m           \u001b[0mmy_pet\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0msleep\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmy_pet\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    114\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 115\u001b[0;31m \u001b[0mnew_pet\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m<ipython-input-21-dba662c6bf3d>\u001b[0m in \u001b[0;36mnew_pet\u001b[0;34m()\u001b[0m\n\u001b[1;32m    104\u001b[0m     \u001b[0mcon\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    105\u001b[0m     \u001b[0;32mwhile\u001b[0m \u001b[0mcon\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 106\u001b[0;31m       action = int(input('Выберите действие (1.покормить, 2.поиграть, '\n\u001b[0m\u001b[1;32m    107\u001b[0m                          '3.уложить спать'))\n\u001b[1;32m    108\u001b[0m       \u001b[0;32mif\u001b[0m \u001b[0maction\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/ipykernel/kernelbase.py\u001b[0m in \u001b[0;36mraw_input\u001b[0;34m(self, prompt)\u001b[0m\n\u001b[1;32m    849\u001b[0m                 \u001b[0;34m\"raw_input was called, but this frontend does not support input requests.\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    850\u001b[0m             )\n\u001b[0;32m--> 851\u001b[0;31m         return self._input_request(str(prompt),\n\u001b[0m\u001b[1;32m    852\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_parent_ident\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    853\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_parent_header\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/ipykernel/kernelbase.py\u001b[0m in \u001b[0;36m_input_request\u001b[0;34m(self, prompt, ident, parent, password)\u001b[0m\n\u001b[1;32m    893\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mKeyboardInterrupt\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    894\u001b[0m                 \u001b[0;31m# re-raise KeyboardInterrupt, to truncate traceback\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 895\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0mKeyboardInterrupt\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Interrupted by user\"\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    896\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    897\u001b[0m                 \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlog\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwarning\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Invalid Message:\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mexc_info\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: Interrupted by user"]}]},{"cell_type":"markdown","source":["# Задание 2"],"metadata":{"id":"qZ7qFQnmssNd"}},{"cell_type":"markdown","source":["Рыцарь и дракон\n","\n","Цель: создать небольшую игру, в которой вам необходимо играть за рыцаря и сразиться с драконом\n","\n","Требования:\n","\n","- Создание персонажа (имя, информация о доспехах, оружии, урон, здоровье)\n","- Управление персонажем и мини сюжет\n","- Создание дракона (Имя, информация о здоровье и уроне)\n","- Боевая система (нанесение и получение урона, урон должен быть случайным в заданном диапазоне)\n","- Реализовать бой между драконом и рыцарем"],"metadata":{"id":"UaccTe7ltNvg"}},{"cell_type":"code","source":["import time\n","from random import randint as rnd\n","\n","\n","def fight(hero):\n","    dragon = {'имя':'бабадук', 'здоровье':100, 'урон':10}\n","    print(f'Напал на город Екатеринбург злой дракон {dragon[\"имя\"]}.'\n","         f'Только герой по имени {hero[\"имя\"]} мог победить его.'\n","         f'И пошел {hero[\"имя\"]} драться с драконом.')\n","    while hero['здоровье'] > 0:\n","        if hero['оружие'] == 'меч':\n","            print(f'Ваши доспехи - {hero[\"доспехи\"]}\\n'\n","                  f'Ваше здоровье - {hero[\"здоровье\"]}\\n'\n","                  f'Здоровье дракона - {dragon[\"здоровье\"]}')\n","            atack = str(input('Выберите действие (ударить по голове, ударить в живот) - '))\n","            time.sleep(1)\n","            if atack == 'ударить по голове':\n","                damage = rnd(0, hero['урон'])\n","                dragon['здоровье'] -= damage\n","                print(f'вы ударили дракона по голове и нанесли {damage} урона\\n')\n","            elif atack == 'ударить в живот':\n","                damage = rnd(0, hero['урон'])\n","                dragon['здоровье'] -= damage\n","                print(f'\\nвы ударили дракона в живот и нанесли {damage} урона')\n","            elif atack == 'убить':\n","                dragon['здоровье'] = 0\n","            if dragon['здоровье'] <= 0:\n","                break\n","            time.sleep(2)\n","            dragon_damage = rnd(0, dragon['урон'])\n","            if hero['доспехи'] > 0:\n","                hero['доспехи'] -= dragon_damage\n","            else:\n","                hero['здоровье'] -= dragon_damage\n","            print(f'дракон ударил {hero[\"имя\"]} и нанес {dragon_damage} урона\\n')\n","        elif hero['оружие'] == 'лук':\n","            print(f'Ваши доспехи - {hero[\"доспехи\"]}\\n'\n","                  f'Ваше здоровье - {hero[\"здоровье\"]}\\n'\n","                  f'Здоровье дракона - {dragon[\"здоровье\"]}')\n","            atack = str(input('Выберите действие (выстрелить в голову, выстрелить в живот) - '))\n","            time.sleep(1)\n","            if atack == 'выстрелить в голову':\n","                damage = rnd(0, hero['урон'])\n","                dragon['здоровье'] -= damage\n","                print(f'вы выстрелили дракону в живот и нанесли {damage} урона\\n')\n","            elif atack == 'выстрелить в живот':\n","                damage = rnd(0, hero['урон'])\n","                dragon['здоровье'] -= damage\n","                print(f'\\nвы выстрелили дракону в живот и нанесли {damage} урона')\n","            elif atack == 'убить':\n","                dragon['здоровье'] = 0\n","            if dragon['здоровье'] <= 0:\n","                break\n","            time.sleep(2)\n","            dragon_damage = rnd(0, dragon['урон'])\n","            if hero['доспехи'] > 0:\n","                hero['доспехи'] -= dragon_damage\n","            else:\n","                hero['здоровье'] -= dragon_damage\n","            print(f'дракон ударил {hero[\"имя\"]} и нанес {dragon_damage} урона\\n')\n","    print(f'Дракон побежден.\\nИ стал {hero[\"имя\"]} жить поживать, да добра наживать!')\n","\n","\n","def new_hero():\n","    hero = {}\n","    name = str(input('Введите имя своего героя - '))\n","    hero['имя'] = name\n","    hero['доспехи'] = 100\n","    weapon = str(input('Выберите оружие (меч, лук) - '))\n","    if weapon == 'меч':\n","        hero['оружие'] = weapon\n","    elif weapon == 'лук':\n","        hero['оружие'] = weapon\n","    hero['урон'] = 10\n","    hero['здоровье'] = 100\n","    print(hero)\n","    fight(hero)\n","\n","new_hero()\n","\n"],"metadata":{"id":"LCcxp5Q0srjY","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1731416210559,"user_tz":-240,"elapsed":30356,"user":{"displayName":"Александр Соболевский","userId":"05585722129785396224"}},"outputId":"43b63b80-feb6-4ac1-a180-1506a9423ffd"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Введите имя своего героя - джон кофи\n","Выберите оружие (меч, лук) - меч\n","{'имя': 'джон кофи', 'доспехи': 100, 'оружие': 'меч', 'урон': 10, 'здоровье': 100}\n","Напал на город Екатеринбург злой дракон бабадук.Только герой по имени джон кофи мог победить его.И пошел джон кофи драться сдраконом.\n","Ваши доспехи - 100\n","Ваше здоровье - 100\n","Здоровье дракона - 100\n","Выберите действие (ударить по голове, ударить в живот) - убить\n","Дракон побежден.\n","И стал джон кофи жить поживать, да добра наживать!\n"]}]},{"cell_type":"markdown","source":["# Задание 3\n"],"metadata":{"id":"N8oFiEXol3e2"}},{"cell_type":"markdown","source":["Цель - создать менеджера команды Pokémon, который позволит пользователям:\n","\n","- Добавлять покемонов в свою команду. (если такого покемона еще нет в команде)\n","- Удалять покемонов из их команды.\n","- Просматривать подробную информацию обо всех покемонах в команде.\n","- Находить покемона по имени.\n","- Устраивать тренировочный бой между двумя покемонами\n","\n","Для данной задачи используйте: https://pokeapi.co/\n"],"metadata":{"id":"9p4WQG_Vl7wB"}},{"cell_type":"code","source":["import requests\n","\n","\n","def add_pokemon(name, team):\n","    try:\n","        if name in team:\n","            print('покемон уже в команде')\n","            return team\n","        else:\n","            response = requests.get(f'https://pokeapi.co/api/v2/pokemon/{name}')\n","            answer = response.json()\n","            abilities =[]\n","            for k, v in answer.items():\n","                if k == 'abilities':\n","                    for i in v:\n","                        for key, value in i.items():\n","                            if key == 'ability':\n","                                for keys, values in value.items():\n","                                    if keys == 'name':\n","                                        abilities.append(values)\n","            team[name] = abilities\n","            print(f'покемон {name} в команде')\n","            return team\n","    except:\n","        print('нет такого покемона')\n","\n","\n","def kick_pokemon(name, team):\n","    try:\n","        del team[name]\n","        print(f'вы выгнали {name}')\n","        return team\n","    except:\n","        return 'у вас нет такого покемона'\n","\n","\n","def show_pokemon(name, team):\n","    try:\n","        return name, team[name]\n","    except:\n","        return 'у вас нет этого покемона'\n","\n","\n","con = True\n","my_team = {}\n","while con:\n","    mode = int(input('1.Добавить покемона в команду, '\n","                     '2.Выгнать покемона из команды, '\n","                     '3.Посмотреть мою команду, \\n'\n","                     '4.Посмотреть покемона, '\n","                     '5.Устроить тренировочный бой: '))\n","    if mode == 1:\n","        name = str(input('Bведите имя покемона, чтобы добавить его в команду: '))\n","        add_pokemon(name, my_team)\n","    elif mode == 2:\n","        name = str(input('Bведите имя покемона, чтобы выгнать его из команды: '))\n","        kick_pokemon(name, my_team)\n","    elif mode == 3:\n","        print(my_team)\n","    elif mode == 4:\n","        name = str(input('Bведите имя покемона: '))\n","        print(show_pokemon(name, my_team))\n","    elif mode == 5:\n","        pass\n","    else:\n","        con = False\n"],"metadata":{"id":"NnGYp1MTqi5k"},"execution_count":null,"outputs":[]}]}